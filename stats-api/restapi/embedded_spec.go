// Code generated by go-swagger; DO NOT EDIT.

package restapi

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
)

var (
	// SwaggerJSON embedded version of the swagger document used at generation time
	SwaggerJSON json.RawMessage
	// FlatSwaggerJSON embedded flattened version of the swagger document used at generation time
	FlatSwaggerJSON json.RawMessage
)

func init() {
	SwaggerJSON = json.RawMessage([]byte(`{
  "schemes": [
    "https",
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "description": "Provides information about FIO https://fioprotocol.io",
    "title": "fio-stats",
    "version": "0.1.0"
  },
  "basePath": "/v1",
  "paths": {
    "/fee": {
      "get": {
        "description": "lists all current fees",
        "parameters": [
          {
            "enum": [
              "suf",
              "float",
              "usd"
            ],
            "type": "string",
            "default": "suf",
            "description": "How to format the values. Options are 'suf' which is the smallest unit of FIO, 'float' which is whole FIO with up to 9 digits, and 'usd' which is the current price.",
            "name": "format",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "An array of prices for each endpoint in FIO",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Price"
              }
            }
          },
          "503": {
            "description": "Data is stale, has not been updated for several minutes",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/fee/byActionName": {
      "get": {
        "description": "lists fees by the action name, not endpoint. If there is no corresponding action the endpoint name is used.",
        "parameters": [
          {
            "enum": [
              "suf",
              "float",
              "usd"
            ],
            "type": "string",
            "default": "suf",
            "description": "How to format the values. Options are 'suf' which is the smallest unit of FIO, 'float' which is whole FIO with up to 9 digits, and 'usd' which is the current price.",
            "name": "format",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "An array of prices for each action in FIO",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Price"
              }
            }
          },
          "503": {
            "description": "Data is stale, has not been updated for several minutes",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/fee/multiplier/{producer}": {
      "get": {
        "description": "list a producer's multiplier",
        "parameters": [
          {
            "type": "string",
            "description": "The producer's account",
            "name": "producer",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "The currently used fee multiplier which is applied to the fee vote to determine price",
            "schema": {
              "properties": {
                "multiplier": {
                  "type": "number",
                  "format": "float32"
                },
                "timestamp": {
                  "description": "Unix timestap of when the fee vote was set",
                  "type": "integer",
                  "format": "uint64"
                }
              }
            }
          },
          "400": {
            "description": "Invalid account format, should be a 12 character string",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Did not find a matching producer",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "503": {
            "description": "Data is stale, has not been updated for several minutes",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/fee/votes/{producer}": {
      "get": {
        "description": "list a producer's fee votes",
        "parameters": [
          {
            "type": "string",
            "description": "The producer's account",
            "name": "producer",
            "in": "path",
            "required": true
          },
          {
            "type": "boolean",
            "default": true,
            "description": "Should the result apply the multiplier? Setting to 'true' is useful for calculating the actual cost that a producer has voted, most useful with 'format=usd'. Using 'false' will provide their base fio.fee::setfeevotes values, and only makes sense if 'format=suf'.",
            "name": "apply_multiplier",
            "in": "query"
          },
          {
            "enum": [
              "suf",
              "float",
              "usd"
            ],
            "type": "string",
            "default": "suf",
            "description": "How to format the values. Options are 'suf' which is the smallest unit of FIO, 'float' which is whole FIO with up to 9 digits, and 'usd' which is the current price.",
            "name": "format",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "An array of the producer's votes for each endpoint in SUF",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Price"
              }
            }
          },
          "400": {
            "description": "Invalid account format, should be a 12 character string",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Did not find a matching producer",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "503": {
            "description": "Data is stale, has not been updated for several minutes",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/price": {
      "get": {
        "description": "The current price used for calculations, as provided by Coingecko.com",
        "responses": {
          "200": {
            "description": "Price in USD averaged across exchanges based on USDT/USDC trading pairs",
            "schema": {
              "properties": {
                "price": {
                  "type": "number",
                  "format": "float32"
                }
              }
            }
          },
          "503": {
            "description": "Data is stale, has not been updated for several minutes",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/suggest/feevote": {
      "get": {
        "description": "A suggested feevote value using sane values formatted as required by fio.fee::setfeevote. Note setting a fee vote is only required once unless new fee endpoints are added.",
        "responses": {
          "200": {
            "description": "array of fio.fee feevalue",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Feevote"
              }
            }
          }
        }
      }
    },
    "/suggest/setfeemult": {
      "get": {
        "description": "A suggested fee multipler as used for fio.fee::setfeemult, based on a target price for the 'register_fio_address' endpoint AND the output from the /suggest/feevote endpoint",
        "parameters": [
          {
            "type": "number",
            "format": "float32",
            "default": 2,
            "name": "target",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "The suggested fee multiplier",
            "schema": {
              "properties": {
                "suggested_multiplier": {
                  "type": "number",
                  "format": "float32"
                }
              }
            }
          },
          "503": {
            "description": "Data is stale, has not been updated for several minutes",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "Error": {
      "properties": {
        "code": {
          "type": "integer"
        },
        "message": {
          "type": "string"
        }
      }
    },
    "Feevote": {
      "required": [
        "end_point",
        "value"
      ],
      "properties": {
        "end_point": {
          "type": "string"
        },
        "value": {
          "description": "SUF value for the fee.",
          "type": "integer",
          "format": "uint64"
        }
      }
    },
    "Price": {
      "required": [
        "end_point"
      ],
      "properties": {
        "end_point": {
          "type": "string"
        },
        "price": {
          "description": "The price for the endpoint, either in FIO tokens or USD based on the format parameter. Only present when format=float or format=usd",
          "type": "number",
          "format": "float32"
        },
        "value": {
          "description": "SUF value for the fee. Only present when format=suf (default)",
          "type": "integer",
          "format": "uint64"
        }
      }
    }
  }
}`))
	FlatSwaggerJSON = json.RawMessage([]byte(`{
  "schemes": [
    "https",
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "description": "Provides information about FIO https://fioprotocol.io",
    "title": "fio-stats",
    "version": "0.1.0"
  },
  "basePath": "/v1",
  "paths": {
    "/fee": {
      "get": {
        "description": "lists all current fees",
        "parameters": [
          {
            "enum": [
              "suf",
              "float",
              "usd"
            ],
            "type": "string",
            "default": "suf",
            "description": "How to format the values. Options are 'suf' which is the smallest unit of FIO, 'float' which is whole FIO with up to 9 digits, and 'usd' which is the current price.",
            "name": "format",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "An array of prices for each endpoint in FIO",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Price"
              }
            }
          },
          "503": {
            "description": "Data is stale, has not been updated for several minutes",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/fee/byActionName": {
      "get": {
        "description": "lists fees by the action name, not endpoint. If there is no corresponding action the endpoint name is used.",
        "parameters": [
          {
            "enum": [
              "suf",
              "float",
              "usd"
            ],
            "type": "string",
            "default": "suf",
            "description": "How to format the values. Options are 'suf' which is the smallest unit of FIO, 'float' which is whole FIO with up to 9 digits, and 'usd' which is the current price.",
            "name": "format",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "An array of prices for each action in FIO",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Price"
              }
            }
          },
          "503": {
            "description": "Data is stale, has not been updated for several minutes",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/fee/multiplier/{producer}": {
      "get": {
        "description": "list a producer's multiplier",
        "parameters": [
          {
            "type": "string",
            "description": "The producer's account",
            "name": "producer",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "The currently used fee multiplier which is applied to the fee vote to determine price",
            "schema": {
              "properties": {
                "multiplier": {
                  "type": "number",
                  "format": "float32"
                },
                "timestamp": {
                  "description": "Unix timestap of when the fee vote was set",
                  "type": "integer",
                  "format": "uint64"
                }
              }
            }
          },
          "400": {
            "description": "Invalid account format, should be a 12 character string",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Did not find a matching producer",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "503": {
            "description": "Data is stale, has not been updated for several minutes",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/fee/votes/{producer}": {
      "get": {
        "description": "list a producer's fee votes",
        "parameters": [
          {
            "type": "string",
            "description": "The producer's account",
            "name": "producer",
            "in": "path",
            "required": true
          },
          {
            "type": "boolean",
            "default": true,
            "description": "Should the result apply the multiplier? Setting to 'true' is useful for calculating the actual cost that a producer has voted, most useful with 'format=usd'. Using 'false' will provide their base fio.fee::setfeevotes values, and only makes sense if 'format=suf'.",
            "name": "apply_multiplier",
            "in": "query"
          },
          {
            "enum": [
              "suf",
              "float",
              "usd"
            ],
            "type": "string",
            "default": "suf",
            "description": "How to format the values. Options are 'suf' which is the smallest unit of FIO, 'float' which is whole FIO with up to 9 digits, and 'usd' which is the current price.",
            "name": "format",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "An array of the producer's votes for each endpoint in SUF",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Price"
              }
            }
          },
          "400": {
            "description": "Invalid account format, should be a 12 character string",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Did not find a matching producer",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "503": {
            "description": "Data is stale, has not been updated for several minutes",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/price": {
      "get": {
        "description": "The current price used for calculations, as provided by Coingecko.com",
        "responses": {
          "200": {
            "description": "Price in USD averaged across exchanges based on USDT/USDC trading pairs",
            "schema": {
              "properties": {
                "price": {
                  "type": "number",
                  "format": "float32"
                }
              }
            }
          },
          "503": {
            "description": "Data is stale, has not been updated for several minutes",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/suggest/feevote": {
      "get": {
        "description": "A suggested feevote value using sane values formatted as required by fio.fee::setfeevote. Note setting a fee vote is only required once unless new fee endpoints are added.",
        "responses": {
          "200": {
            "description": "array of fio.fee feevalue",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Feevote"
              }
            }
          }
        }
      }
    },
    "/suggest/setfeemult": {
      "get": {
        "description": "A suggested fee multipler as used for fio.fee::setfeemult, based on a target price for the 'register_fio_address' endpoint AND the output from the /suggest/feevote endpoint",
        "parameters": [
          {
            "type": "number",
            "format": "float32",
            "default": 2,
            "name": "target",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "The suggested fee multiplier",
            "schema": {
              "properties": {
                "suggested_multiplier": {
                  "type": "number",
                  "format": "float32"
                }
              }
            }
          },
          "503": {
            "description": "Data is stale, has not been updated for several minutes",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "Error": {
      "properties": {
        "code": {
          "type": "integer"
        },
        "message": {
          "type": "string"
        }
      }
    },
    "Feevote": {
      "required": [
        "end_point",
        "value"
      ],
      "properties": {
        "end_point": {
          "type": "string"
        },
        "value": {
          "description": "SUF value for the fee.",
          "type": "integer",
          "format": "uint64"
        }
      }
    },
    "Price": {
      "required": [
        "end_point"
      ],
      "properties": {
        "end_point": {
          "type": "string"
        },
        "price": {
          "description": "The price for the endpoint, either in FIO tokens or USD based on the format parameter. Only present when format=float or format=usd",
          "type": "number",
          "format": "float32"
        },
        "value": {
          "description": "SUF value for the fee. Only present when format=suf (default)",
          "type": "integer",
          "format": "uint64"
        }
      }
    }
  }
}`))
}
